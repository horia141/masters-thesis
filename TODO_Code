+ [13] B:08.03.2012 E:08.03.2012
  Task: Add a fast mode for testing where no display of images is done. This
    is also useful for running tests on other machines which may not have X.
  Resolved: I've added to all "test" functions an argument named "display". If
    this is present and "true" then image display occurs. This helps "all_tests"
   speed by a lot.

+ [12] B:08.03.2012 E:08.03.2012
  Task: There are bugs in the part of the test where we display images. More
   precisely, some figures are not properly closed after a test. I must make
   sure they work as intended.
  Resolved: I've made the code much simpler. It depends on MatLAB keeping
    track of the required interal figure handle and axis handle state.

+ [11] B:08.03.2012 E:08.03.2012
  Task: Whenever we test for an "object" we should also test for it being a
    scalar.
  Resolved: I've added the required checks.

- [10] B:08.03.2012 E:??.??.????
  Task: Add timing code to "all_tests" so we know how much time a full test
    suite takes.

+ [9] B:08.03.2012 E:08.03.2012
  Task: Add tests which work on images to "pca_transform",  "pca_whitening_transform"
    and "zca_transform". Also display the original images in the tests for
    "utils.remap_images_to_unit" because it is helpful to see how MatLAB displays
    such images badly.
  Resolved: I've added the image viewing code for "pca_transform" and
    "pca_whitening_transform" as it made the most sense there. Other commits
     have fixed the "utils.remap_images_to_unit" tests.

+ [8] B:07.03.2012 E:08.03.2012
  Task: There is a degree of non-uniformity in the logging for tests. I should
    fix this.
  Resolved: I've made all test logging messages follow a similar format and
    I've also made them more succint.

+ [7] B:07.03.2012 E:??.??.????
  Task: Move all datasets used  in test in "$PROJECT_ROOT/data/test" so
    they'll be accessible no matter what.
  Resolved: I've moved all datesets used in testing in the required directory.

+ [6] B:06.03.2012 E:07.03.2012
  Task: In test functions add "printf" statements for subtests as well as full
    tests.
  Resolved: Added "printf" statements appropriate to each subtest.

+ [5] B:06.03.2012 E:07.03.2012
  Task: Make code that tests transforms use an approximate test for equality
    of samples. Due to numeric precision errors we might have problems in our
    tests. It's not something we want.
  Resolved: Added the function "utils.approx" and used it in all places where
    transform results comparisons were made.

+ [4] B:06.03.2012 E:06.03.2012
  Task: Add tests in "tc" structure functions for empty values. In particular,
    "tc.scalar", "tc.vector", "tc.matrix" and "tc.tensor" should return false on
    empty objects.
  Resolved: I've redefined the "type-tree" for this project and rewritten
    tests so they are simpler and more robust. Also, the structural functions
    have been modified as required by this task.

+ [3] B:06.03.2012 E:06.03.2012
  Task: Make all dependent properties be immutable. Since our objects contain
    only immutable fields, it makes no sense to have dependent properties. We
    can compute them only once, at construction time, and be done with
    that. This should reduce some of the clutter in "samples_set" and "gray_images_set".
  Resolved: Changed the properties in "samples_set" and "gray_images_set" to
    be immutable and computed in the constructor.

+ [2] B:05.03.2012 E:05.03.2012
  Task: In all "test" functions, make the destruction of objects between tests
    in the order of object creation. Alternatively, use "clear all".
  Resolved: Added a clear all after each test. Also, I've renamed objects so
    they are no longer unique at the function level. For example, most sample
    sets are now called "s"  instead of "s1", "s2" etc. Derived versions of
    such sets are, of course, still called "s_p", "s_f11" etc.

- [1] B:05.03.2012 E:??.??.????
  Task: Make use of the "Causes" field in MATLAB exception handling in the
    code so far. This seems like an implementation of the "hierarchical"
    exception handling I've been thinking about.
